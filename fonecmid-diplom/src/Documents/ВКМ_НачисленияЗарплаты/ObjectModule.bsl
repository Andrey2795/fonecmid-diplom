
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОсновныеНачисления();
	
	РассчитатьУдержания();
	
	// регистр ВКМ_ВзаиморасчетыССотрудниками 
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	               |ГДЕ
	               |	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = СуммаВКМ_ВзаиморасчетыССотрудниками(Выборка.Сотрудник);
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвижения();
	
	Для Каждого Строка Из Начисления Цикл
		
		Если ТипЗнч(Строка.ВидРасчета) = Тип ("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодДействияНачало = Строка.ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Размер = Строка.Размер;
			
		КонецЕсли;
				
		Если ТипЗнч(Строка.ВидРасчета) = Тип ("ПланВидовРасчетаСсылка.ВКМ_Удержания") Тогда
			
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Размер = Строка.Размер;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры	

Процедура РассчитатьОсновныеНачисления();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.Размер КАК РазмерОклада,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК РабочихДней,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ОтработаноДней,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
	               |	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало, ДЕНЬ) КАК КалендарныхДней,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Движение.ВидРасчета.Наименование = "Оклад" Тогда
			Если Выборка.Сотрудник.ВКМ_Должность = Перечисления.ВКМ_Должности.Специалист Тогда
				СуммаПроцентОтРабот = СуммаПроцентОтРабот(Выборка.Сотрудник);
				Движение.Размер = Окр((Выборка.РазмерОклада / Выборка.РабочихДней) * Выборка.ОтработаноДней, 2) + СуммаПроцентОтРабот;
			Иначе
				Движение.Размер = Окр((Выборка.РазмерОклада / Выборка.РабочихДней) * Выборка.ОтработаноДней, 2);
			КонецЕсли;	
		Иначе
			НачисленнаяСуммаЗаГод = НачисленнаяСуммаЗаГод(Выборка.Сотрудник);
			Если ЗначениеЗаполнено(НачисленнаяСуммаЗаГод) Тогда
				Движение.Размер = Окр((НачисленнаяСуммаЗаГод / Выборка.РабочихДней) * Выборка.КалендарныхДней, 2);
				//Отпускные (Начисленная сумма за 12 мес. / Количество рабочих дней) х Количество календарных дней отпуска
			Иначе
				Движение.Размер = Окр((РазмерОклада(Выборка.Сотрудник) / Выборка.РабочихДней) * Выборка.КалендарныхДней, 2);	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры	
	
Процедура РассчитатьУдержания();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	               |	ВКМ_Удержания.Размер КАК Размер
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Размер = Окр(((Выборка.Размер / 100) * 13),2);
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(,Истина);
		
КонецПроцедуры	

Функция НачисленнаяСуммаЗаГод(Сотрудник);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ВзаиморасчетыССотрудникамиОбороты.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Обороты(&ДатаНачала, &ДатаОкончания, Год, Сотрудник = &Сотрудник) КАК ВКМ_ВзаиморасчетыССотрудникамиОбороты";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецГода(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаОборот = Выборка.СуммаОборот;	
	КонецЦикла;
	Возврат СуммаОборот;
КонецФункции	

Функция СуммаПроцентОтРабот(Сотрудник);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания, Месяц, Сотрудник = &Сотрудник) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаКОплатеОборот = Выборка.СуммаКОплатеОборот;	
	КонецЦикла;
	Возврат СуммаКОплатеОборот;
КонецФункции	

Функция СуммаВКМ_ВзаиморасчетыССотрудниками(Сотрудник);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Размер КАК Размер
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	               |	И ВКМ_ОсновныеНачисления.Сотрудник = &Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_Удержания.Размер КАК Размер
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
				   |ГДЕ
				   |	ВКМ_Удержания.Регистратор = &Регистратор
				   |	И ВКМ_Удержания.Сотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ОсновныеНачисления = РезультатЗапроса[0].Выгрузить();
	Удержания = РезультатЗапроса[1].Выгрузить();
	Размер = ОсновныеНачисления[0].Размер - Удержания[0].Размер;
	Возврат Размер;
КонецФункции	

Функция РазмерОклада(Сотрудник)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Оклад = Выборка.Оклад;	
	КонецЦикла;
	Возврат Оклад;
КонецФункции	
