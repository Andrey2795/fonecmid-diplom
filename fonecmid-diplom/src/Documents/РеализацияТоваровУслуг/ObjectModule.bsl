
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли

Процедура ВыполнитьАвтозаполнение() Экспорт
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) ИЛИ Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		Ошибки = Неопределено;
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните значения констант НоменклатураАбонентскаяПлата И/ИЛИ НоменклатураРаботыСпециалиста";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Товары.Очистить();
	Услуги.Очистить();
	Если Договор.СуммаАбонентскойПлаты > 0 Тогда
		СтрУслуги = Услуги.Добавить();
		СтрУслуги.Номенклатура = НоменклатураАбонентскаяПлата;
		СтрУслуги.Количество = 1;
		СтрУслуги.Цена = Договор.СуммаАбонентскойПлаты;
		СтрУслуги.Сумма = Договор.СуммаАбонентскойПлаты;	
	КонецЕсли;
	ВыполненныеКлиентуРаботы = ВыполненныеКлиентуРаботыВТеченииМесяца(Дата);
	Если ВыполненныеКлиентуРаботы <> Неопределено Тогда
		СтрУслуги = Услуги.Добавить();
		СтрУслуги.Номенклатура = НоменклатураРаботыСпециалиста;
		СтрУслуги.Количество = ВыполненныеКлиентуРаботы.КоличествоЧасов;
		СтрУслуги.Цена = Окр(ВыполненныеКлиентуРаботы.СуммаКОплате / ВыполненныеКлиентуРаботы.КоличествоЧасов, 2);
		СтрУслуги.Сумма = ВыполненныеКлиентуРаботы.СуммаКОплате;	
	КонецЕсли;
	ЭтотОбъект.Записать();	
КонецПроцедуры

Функция ВыполненныеКлиентуРаботыВТеченииМесяца(Дата)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.КоличествоЧасовКонечныйОстаток КАК КоличествоЧасов,
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.СуммаКОплатеКонечныйОстаток КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(&ДатаНачальная, &ДатаКонечная, Месяц,,
	|		Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты";
	Запрос.УстановитьПараметр("ДатаНачальная", НачалоМесяца(Дата));	
	Запрос.УстановитьПараметр("ДатаКонечная", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;	
	Пока Выборка.Следующий() Цикл
		КоличествоЧасов = Выборка.КоличествоЧасов;
		СуммаКОплате = Выборка.СуммаКОплате;		
	КонецЦикла;
	ВыполненныеРаботы = Новый Структура;
	ВыполненныеРаботы.Вставить("КоличествоЧасов",КоличествоЧасов);
	ВыполненныеРаботы.Вставить("СуммаКОплате",СуммаКОплате);
	Возврат ВыполненныеРаботы;	
КонецФункции		
